{
    "env": {
      "browser": true,
      "es6": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:react/recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:prettier/recommended",
      "prettier",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:import/typescript"
    ],
    "globals": {
      "fetch": false
    },
    "overrides": [
      {
        "files": ["*.js", "*.mjs"],
        "rules": {
          "@typescript-eslint/ban-types": "off",
          "@typescript-eslint/explicit-module-boundary-types": "off",
          "@typescript-eslint/no-empty-function": "off",
          "@typescript-eslint/no-empty-interface": "off",
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-var-requires": "off"
        }
      },
      {
        "files": ["*.ts", "*.tsx"], // Your TypeScript files extension
        // As mentioned in the comments, you should extend TypeScript plugins here,
        // instead of extending them outside the `overrides`.
        // If you don't want to extend any rules, you don't need an `extends` attribute.
        "extends": [
          "plugin:@typescript-eslint/recommended",
          "plugin:@typescript-eslint/recommended-requiring-type-checking"
        ],
  
        "parserOptions": {
          "project": ["./tsconfig.json"] // Specify it only for TypeScript files
        },
        "rules": {
          "@typescript-eslint/explicit-module-boundary-types": "off",
          "@typescript-eslint/no-floating-promises": "off" // default reportWebVitals.ts file
        }
      }
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "allowImportExportEverywhere": true,
      "ecmaFeatures": {"jsx": true},
      "ecmaVersion": "latest",
      "sourceType": "module",
      "project": "./tsconfig.json"
    },
    "plugins": ["react", "import", "react-hooks", "prettier", "@typescript-eslint"],
    "rules": {
      "@typescript-eslint/ban-types": [
        "error",
        {
          "extendDefaults": true,
          "types": {"{}": false}
        }
      ],
      "@typescript-eslint/explicit-module-boundary-types": "warn",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "class-methods-use-this": "off",
      "comma-dangle": "off",
      "indent": "off",
      "indent-legacy": 0,
      "import/no-unresolved": 0,
      "import/named": 0,
      "import/namespace": 0,
      "import/default": 0,
      "import/no-named-as-default-member": 0,
      "no-param-reassign": [2, {"props": false}],
      "no-tabs": ["off", {"allowIndentationTabs": true}],
      "no-use-before-define": "warn",
      "no-unused-vars": "warn",
      "quotes": ["error", "single", {"avoidEscape": true}],
      "react-hooks/rules-of-hooks": "off",
      "react-hooks/exhaustive-deps": "warn",
      "react/jsx-filename-extension": "off",
      "react/jsx-uses-react": "off",
      "react/jsx-uses-vars": "error",
      "react/prop-types": "off",
      "react/react-in-jsx-scope": "off",
      "react/require-default-props": "off",
      "sort-imports": [
        "error",
        {
          "ignoreCase": false,
          "ignoreDeclarationSort": true,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
        }
      ]
    },
    "settings": {
      "react": {
        "createClass": "createReactClass",
        "pragma": "React",
        "fragment": "Fragment",
        "version": "detect"
      }
    }
  }